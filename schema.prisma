datasource db {
    provider = "mysql"
    url      = "mysql://root:root@localhost/ecommerce"
}

generator client {
    provider = "prisma-client-js"
}

model User {
    user_id        Int         @id @default(autoincrement())
    username       String      @unique
    password       String       
    IsAdmin        Boolean     @default(false)
    email          String      @unique
    firstName      String
    dateOfBirth    String
    IsStudent      String
    addressLine1   String 
    addressLine2   String?
    collegeName    String?
    city           String
    state          String
    country        String
    postalCode     String
    phoneNumber    String      @unique @db.VarChar(10)
    IsAccessLocked Boolean     @default(false)
    LockedDate     DateTime?
    DeletedDate    DateTime?
    IsDisabled     Boolean     @default(false)
    createdAt      DateTime    @default(now())
    lastLoginAt    DateTime?
    Shop           Shop[]
    Order          Order[]
    Review         Review[]
    Cart           Cart[]
    Payment        Payment[]
    Address        Address[]
    Favorites      Favorites[]
}

model Shop {
    shop_id       Int       @id @default(autoincrement())
    shopName      String    @unique
    description   String?   @db.VarChar(250)
    username         User      @relation(fields: [userName], references: [username])
    userName       String
    businessEmail String    @unique
    pickupAddress String
    orders        Int?
    products      Product[]
    services      Service[]
    Review        Review[]
}

model Product {
    product_id  Int          @id @default(autoincrement())
    ShopName        String
    shopId      Int
    description String
    price       Float
    quantity    Int
    shop        Shop         @relation(fields: [shopId], references: [shop_id])
    orders      Order[]
    Review      Review[]
    tagId       Int?
    ProductTag  ProductTag[]
    Cart        Cart[]
    Favorites   Favorites[]
}

model Service {
    service_id  Int          @id @default(autoincrement())
    name        String
    description String
    price       Float
    shop        Shop         @relation(fields: [shopId], references: [shop_id])
    shopId      Int
    orders      Order[]
    Review      Review[]
    tagId       Int?
    ServiceTag  ServiceTag[]
    Cart        Cart[]
    Favorites   Favorites[]
}

model Order {
    order_id  Int      @id @default(autoincrement())
    quantity  Int
    orderDate DateTime @default(now())
    status    String
    user      User     @relation(fields: [userId], references: [user_id])
    userId    Int
    product   Product? @relation(fields: [productId], references: [product_id])
    productId Int?
    service   Service? @relation(fields: [serviceId], references: [service_id])
    serviceId Int?
}

model Review {
    review_id  Int      @id @default(autoincrement())
    rating     Int
    reviewText String
    reviewDate DateTime @default(now())
    user       User     @relation(fields: [userId], references: [user_id])
    userId     Int
    shop       Shop?    @relation(fields: [shopId], references: [shop_id])
    shopId     Int?
    product    Product? @relation(fields: [productId], references: [product_id])
    productId  Int?
    service    Service? @relation(fields: [serviceId], references: [service_id])
    serviceId  Int?
}

model Category {
    category_id   Int           @id @default(autoincrement())
    name          String
    description   String?
    subcategories Subcategory[]
}

model Subcategory {
    id          Int      @id @default(autoincrement())
    name        String
    description String?
    category    Category @relation(fields: [categoryId], references: [category_id])
    categoryId  Int
}

model Tag {
    id                Int       @id @default(autoincrement())
    name              String
    serviceService_id Int?
}

model ProductTag {
    productId Int
    tagId     Int
    product   Product @relation(fields: [productId], references: [product_id])

    @@id([productId, tagId])
}

model ServiceTag {
    serviceId Int
    tagId     Int
    service   Service @relation(fields: [serviceId], references: [service_id])

    @@id([serviceId, tagId])
}

model Cart {
    id        Int       @id @default(autoincrement())
    user      User      @relation(fields: [userId], references: [user_id])
    userId    Int
    product   Product?  @relation(fields: [productId], references: [product_id])
    productId Int?
    service   Service   @relation(fields: [serviceId], references: [service_id])
    serviceId Int
    Payment   Payment[]
}

model Payment {
    id            Int      @id @default(autoincrement())
    user          User     @relation(fields: [userId], references: [user_id])
    userId        Int
    cart          Cart     @relation(fields: [cartId], references: [id])
    cartId        Int
    paymentDate   DateTime @default(now())
    paymentMethod String
    totalAmount   Float
}

model Address {
    id           Int     @id @default(autoincrement())
    user         User    @relation(fields: [userId], references: [user_id])
    userId       Int
    addressLine1 String
    addressLine2 String?
    city         String
    state        String
    country      String
    postalCode   String
}

model Favorites {
    id        Int      @id @default(autoincrement())
    user      User     @relation(fields: [userId], references: [user_id])
    userId    Int
    product   Product? @relation(fields: [productId], references: [product_id])
    productId Int?
    service   Service? @relation(fields: [serviceId], references: [service_id])
    serviceId Int?
}
